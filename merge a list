#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

struct Node* mergeLists(struct Node* list1, struct Node* list2) {
    if (list1 == NULL) {
        return list2;
    }
    if (list2 == NULL) {
        return list1;
    }

    struct Node* merged = NULL;
    if (list1->data <= list2->data) {
        merged = list1;
        merged->next = mergeLists(list1->next, list2);
    } else {
        merged = list2;
        merged->next = mergeLists(list1, list2->next);
    }
    return merged;
}

void printList(struct Node* head) {
    struct Node* current = head;
    while (current != NULL) {
        printf("%d ", current->data);
        current = current->next;
    }
    printf("\n");
}

int main() {
    struct Node* list1 = NULL;
    struct Node* list2 = NULL;
    list1 = (struct Node*)malloc(sizeof(struct Node));
    list1->data = 1;
    list1->next = (struct Node*)malloc(sizeof(struct Node));
    list1->next->data = 3;
    list1->next->next = (struct Node*)malloc(sizeof(struct Node));
    list1->next->next->data = 5;
    list1->next->next->next = NULL;
    list2 = (struct Node*)malloc(sizeof(struct Node));
    list2->data = 2;
    list2->next = (struct Node*)malloc(sizeof(struct Node));
    list2->next->data = 4;
    list2->next->next = (struct Node*)malloc(sizeof(struct Node));
    list2->next->next->data = 6;
    list2->next->next->next = NULL;

    printf("List 1: ");
    printList(list1);
    printf("List 2: ");
    printList(list2);

    struct Node* mergedList = mergeLists(list1, list2);

    printf("Merged List: ");
    printList(mergedList);

    return 0;
}
output
List 1: 1 3 5
List 2: 2 4 6
Merged List: 1 2 3 4 5 6
